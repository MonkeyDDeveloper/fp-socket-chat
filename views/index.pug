doctype html
head
  meta(charset='utf-8')
  meta(name='viewport' content='width=device-width, initial-scale=1')
  link(rel="shortcut icon", href="/public/logo_large.png", type="image/x-icon")
  link(href='https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css' rel='stylesheet' integrity='sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx' crossorigin='anonymous')
  script(src="/socket.io/socket.io.js")
  title Soket.io chat
  style.
    .vh-100 {
        height: 100vh;
    }   
body
    .container.vh-100.pt-1.d-flex.flex-column
        .jumbotron.bg-light.p-2.rounded-3.border.border-info
            h1.display-1 Send a message
            form
                .form-group.w-50.mx-auto.mb-3
                    label.fs-5 Your name
                    input.form-control(type="text" name="name" required)
                .form-group.w-50.mx-auto.mb-3
                    label.fs-5 Your message
                    textarea.form-control(name="message" required)
                .form-group.w-50.mx-auto.mb-3
                    button.btn.btn-success.form-control(type="submit") Send
        br
        #messages.overflow-auto.flex-grow-1
            each message in messages
                .container.mb-2.p-2.bg-light.rounded-3.border.border-cyan
                    h5.fs-5.text-primary=message.name
                    p.px-2.fs-3.text-dark=message.message
        template
            .container.mb-2.p-2.bg-light.rounded-3.border.border-cyan
                    h5.name.fs-5.text-primary
                    p.message.px-2.fs-3.text-dark
    script(src='https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js' integrity='sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa' crossorigin='anonymous')
    script.
        (()=>{
            const socket = io();
            const messagesArea = document.getElementById('messages');
            const messageTemplate = document.querySelector('template').content;
            const form = document.querySelector('form');
            const addMessage = message => {
                messageTemplate.querySelector('.name').textContent = message.name
                messageTemplate.querySelector('.message').textContent = message.message
                let newMessage = document.importNode(messageTemplate, true);
                messagesArea.appendChild(newMessage)
                messagesArea.scrollTop = messagesArea.scrollHeight
            }
            form.onsubmit = e => {
                e.preventDefault();
                let message = Object.fromEntries(new FormData(e.target).entries())
                let requestConfig = {
                    method: 'post',
                    headers: {
                        'content-type':'application/json'
                    },
                    body: JSON.stringify(message)
                }
                fetch('/new-message', requestConfig)
            }
            messagesArea.scrollTop = messagesArea.scrollHeight
            socket.on('new-message', message => {
                addMessage(message)
            })

        })(document, io)